package com.table.java.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.table.java.exceptions.CustomException;
import com.table.java.exceptions.EmployeeNotFound;
import com.table.java.model.Employee;
import com.table.java.repo.EmployeeRepository;

@Service
public class EmployeeService {

	@Autowired
	private EmployeeRepository employeeRepository;

	public Employee saveEmployee(Employee employee) {

	
		return employeeRepository.save(employee);
	}

	public Optional<Employee> getEmployeeById(Long id) {
		employeeRepository.findById(id)
				.orElseThrow(() -> new CustomException("Entry with this : " + id + "doesn't exists"));
		return employeeRepository.findById(id);
	}

	public Employee updateEmployee(Long id) {
		Employee employee = employeeRepository.findById(id)
				.orElseThrow(() -> new CustomException("Entry with this : " + id + "doesn't exists"));
		employee.setDesignation(employee.getDesignation());
		// employee.setMobileNo(employee.getMobileNo());

		return employee;

	}

	public List<Employee> getAllEmployees() {
		return employeeRepository.findAll();
	}

	public void deleteEmployeeById(Long id) {
		Employee employee = employeeRepository.findById(id)
				.orElseThrow(() -> new CustomException("Entry with this : " + id + "doesn't exists"));
		System.out.println("employee deleted");
		employeeRepository.deleteById(id);
	}

	public String getFullName(Long id) {
		Employee employee = employeeRepository.findById(id)
				.orElseThrow(() -> new CustomException("Entry with this : " + id + "doesn't exists"));
		employeeRepository.getFullname(id);

		return employee.getFirstName() + " " + employee.getLastName();

	}

	public String getDesignation(Long id) {
		Employee employee = employeeRepository.findById(id)
				.orElseThrow(() -> new CustomException("Entry with this : " + id + "doesn't exists"));
		employeeRepository.getDesignation(id);
		return employee.getDesignation();
	}

	public String getEmail(Long id) {
		Employee employee = employeeRepository.findById(id)
				.orElseThrow(() -> new CustomException("Entry with this : " + id + " doesn't exists"));
		employeeRepository.getEmail(id);

		return employee.getEmailId();

	}
	
	public void delelteAllEmployees() {
		//Employee employee=new Employee();
		long count = employeeRepository.count();
		System.out.println(count);
		if(count>0) {
			employeeRepository.deleteAll();
		}else {
			throw new EmployeeNotFound("No data found");
		}
	//	employeeRepository.deleteAll();
	}
}
